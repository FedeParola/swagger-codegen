{{>licenseInfo}}

#ifndef _REST_SERVER_H
#define _REST_SERVER_H

#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <spdlog/spdlog.h>

class RestServer {
public:
    RestServer(Net::Address addr);
    void init(size_t thr);
    void start();
    void shutdown();


    const std::string base = "{{basePathWithoutHost}}";

    virtual ~RestServer() {};

private:
    void setupRoutes();

    {{#operations}}
    {{#operation}}
    void {{operationIdLowerCase}}(const Net::Rest::Request &request, Net::Http::ResponseWriter response);
    {{/operation}}
    {{/operations}}

    std::shared_ptr<Net::Http::Endpoint> httpEndpoint;
    Net::Rest::Router router;

    std::shared_ptr<spdlog::logger> l;

    {{#operations}}
    {{#operation}}
    /// <summary>
    /// {{summary}}
    /// </summary>
    /// <remarks>
    /// {{notes}}
    /// </remarks>
    {{#allParams}}/// <param name="{{paramName}}">{{description}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}</param>{{/allParams}}
    virtual void {{operationId}}({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}}, Net::Http::ResponseWriter &response) = 0;
    {{/operation}}
    {{/operations}}

};


#endif